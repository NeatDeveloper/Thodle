/// Модель **пользователя**
///
/// Является основной моделью в базе данных, от которого мы наследуемся при работе с расписаниями
/// @namespace Пользователь
model User {
    /// ID пользователя в базе данных
    id String @id @default(cuid()) /// @zod.string.cuid()

    /// Аватарка пользователя
    avatar String?

    /// ID пользователя в телеграм
    tgID BigInt @unique @map("tg_id")

    /// Фамилия пользователя в телеграм
    lastName  String? @map("last_name")
    /// Имя пользователя в телеграм
    firstName String? @map("first_name")
    /// Имя пользователя пользователя в телеграм
    username  String? @unique

    /// Роль пользователя в системе
    role UserRole @default(R_0)

    /// Выбраный им язык
    lang String

    /// Модель, которая является входной точкой "в системе университета"
    amplua   Amplua?
    // Настройки пользователя
    settings Settings?
    // Устройства пользователя
    devices Device[]

    /// Является ли пользователь премиум пользователем
    isPremium Boolean @map("is_premium")

    /// Дата создания пользователя в нашей системе
    createdAt DateTime @default(now()) @map("created_at")
    /// Дата обновления пользователя в нашей системе
    updatedAt DateTime @updatedAt @map("updated_at")

    @@unique([id, tgID])
    @@map("users")
    @@schema("user")
}

enum UserRole {
    R_0 @map("role_regular")
    R_1 @map("role_increase")
    R_2 @map("role_supervisor")
    R_3 @map("role_admin")

    @@map("UserRoles")
    @@schema("user")
}
