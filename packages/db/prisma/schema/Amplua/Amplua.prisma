/// -------------------------------------------------------
/// Схема "Амплуа"
/// -------------------------------------------------------
///
/// Модель **Амплуа**
///
/// Является точкой входа пользователя в качестве сущности в университете.
/// Она ссылается на другие модели, но так же, хранит в себе роли пользователя в рамках учреждения
///
/// @namespace Amplua
/// @erd Amplua
model Amplua {
    /// Уникальный идентификатор пользователя
    id   String @id

    /// Роли пользователя в рамках учреждения
    ///
    /// Варианты | Значения
    /// -------|--------
    /// **UNDEFINED** | Неизвестен. Установлен по умолчанию, поскольку есть вероятность, что человек какое то время будет привязан к группе
    /// **STUDENT** | Студент
    /// **CURATOR** | Куратор
    /// **GROUP_HEAD** | Староста
    /// **LECTOR** | Преподаватель
    /// **TUTOR** | Тьютор(высока вероятность, что по итогу не реализуем)
    role AmpluaRole[] @default([UNDEFINED])

    /// Ссылка на профиль студента
    student   Student?

    /// Ссылка на профиль старосты
    groupHead GroupHead?

    /// Ссылка на профиль куратора
    curator   Curator?

    /// Ссылка на профиль тьютора
    tutor     Tutor?

    /// Ссылка на профиль преподавателя
    lector    Lector?

    User User @relation(fields: [id], references: [id], onDelete: Cascade)

    /// Дата обновления сущности в нашей системе
    updatedAt DateTime @updatedAt @map("updated_at")

    /// Дата создания пользователя в нашей системе
    createdAt DateTime @default(now()) @map("created_at")

    
    @@map("Amplua")
    @@schema("amplua")
}

enum AmpluaRole {
    UNDEFINED  @map("amplua_role_undefined")
    STUDENT    @map("amplua_role_student")
    CURATOR    @map("amplua_role_curator")
    GROUP_HEAD @map("amplua_role_group_head")
    LECTOR     @map("amplua_role_lector")
    TUTOR      @map("amplua_role_tutor")

    @@map("AmpluaEnum")
    @@schema("amplua")
}
